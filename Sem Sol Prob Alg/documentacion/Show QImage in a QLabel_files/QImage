// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-1629739459234463496"},"updated":{"$t":"2016-07-09T19:33:21.949+03:00"},"category":[{"term":"Java"},{"term":"Algorithms"},{"term":"cplusplus"},{"term":"Qt"},{"term":"Recursion"},{"term":"Generics"},{"term":"Data Structures"},{"term":"Binary Tree"},{"term":"Binary search algorithm"},{"term":"QGraphicsScene"},{"term":"Ubuntu"},{"term":"Boost"},{"term":"Pointer"},{"term":"QGraphicsView"},{"term":"QDialog"},{"term":"QGraphicsItem"},{"term":"J2ME"},{"term":"PL\/SQL"},{"term":"QString"},{"term":"Serialization"},{"term":"Apache POI"},{"term":"Header Files"},{"term":"Maven2"},{"term":"PostgreSQL"},{"term":"QDataStream"},{"term":"QSqlDatabase"},{"term":"QSqlQuery"},{"term":"QtSql"},{"term":"RpcGen"},{"term":"Ruby"},{"term":"Ruby on Rails"},{"term":"Software Engineering"},{"term":"socket"},{"term":".Net Framework"},{"term":"C#"},{"term":"Commons Net FtpClient"},{"term":"Dictionary"},{"term":"Dynamic-link library"},{"term":"Enumeration"},{"term":"Exceptions"},{"term":"Hibernate"},{"term":"Junit"},{"term":"Logger"},{"term":"MySQL"},{"term":"QDebug"},{"term":"QDir"},{"term":"QFileDialog"},{"term":"QImage"},{"term":"QLayout"},{"term":"QLibrary"},{"term":"QMutex"},{"term":"QRegExp"},{"term":"QSqlError"},{"term":"QStringList"},{"term":"QTest"},{"term":"QVariant"},{"term":"QXMLStreamWriter"},{"term":"Regex"},{"term":"Run-time type information"},{"term":"Unicode"},{"term":"Visual Studio IDE"}],"title":{"type":"text","$t":"Tufan Görel"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/tufangorel.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/1629739459234463496\/posts\/default\/-\/QImage?alt=json-in-script\u0026max-results=5"},{"rel":"alternate","type":"text/html","href":"http:\/\/tufangorel.blogspot.com\/search\/label\/QImage"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Tufan Görel"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/02308107478813024690"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"31","src":"http:\/\/1.bp.blogspot.com\/-8C4zN2V2Zoc\/VhgpZJnyTzI\/AAAAAAAAAdA\/dmkwYsYWV00\/s220\/profile_photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"1"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"5"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-1629739459234463496.post-2344070852462766886"},"published":{"$t":"2011-06-07T21:17:00.006+03:00"},"updated":{"$t":"2015-11-11T16:08:53.797+02:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"cplusplus"},{"scheme":"http://www.blogger.com/atom/ns#","term":"QImage"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Qt"}],"title":{"type":"text","$t":"Show QImage in a QLabel"},"content":{"type":"html","$t":"\u003Cspan style=\"font-weight: bold;\"\u003EQImage\u003C\/span\u003E enables to construct images from file paths on the disk. Constructed QImages can be displayed in a QLabel. By setting the pixmap value of QLabel from \u003Cspan style=\"font-weight: bold;\"\u003EsetPixmap\u003C\/span\u003E function, \u003Cspan style=\"font-weight: bold;\"\u003EQLabel\u003C\/span\u003E displays content of \u003Cspan style=\"font-weight: bold;\"\u003EQImage\u003C\/span\u003E.\u003Cbr \/\u003ESample project started as a QT Gui Application and contains main.cpp, ShowQImageDialog.h and ShowQImageDialog.cpp files.\u003Cbr \/\u003E\u003Cspan style=\"font-weight: bold;\"\u003EShowQImageDialog\u003C\/span\u003E constructor creates a QGridLayout instance that is containing a QScrollArea inside it and displays the image in this area.\u003Cbr \/\u003EProject Directory Structure in \u003Cspan style=\"font-weight: bold;\"\u003EQt Creator IDE\u003C\/span\u003E :\u003Cbr \/\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-nW049dMWehc\/Te5xB4TL-5I\/AAAAAAAAADc\/hcjETadMtjI\/s1600\/project_structure.png\" onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\"\u003E\u003Cimg alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5615550062484257682\" src=\"http:\/\/3.bp.blogspot.com\/-nW049dMWehc\/Te5xB4TL-5I\/AAAAAAAAADc\/hcjETadMtjI\/s320\/project_structure.png\" style=\"cursor: hand; cursor: pointer; display: block; height: 144px; margin: 0px auto 10px; text-align: center; width: 282px;\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EShowQImageDialog.pro is the project configuration file and contains:\u003Cbr \/\u003E\u003Cpre class=\"brush:cpp\" name=\"code\"\u003ETARGET = ShowQImageDialog\u003Cbr \/\u003ECONFIG   += core gui\u003Cbr \/\u003ETEMPLATE = app\u003Cbr \/\u003ESOURCES += main.cpp \\\u003Cbr \/\u003E    ShowQImageDialog.cpp\u003Cbr \/\u003EHEADERS += \\\u003Cbr \/\u003E    ShowQImageDialog.h\u003C\/pre\u003E\u003Cbr \/\u003Emain.cpp file contains the \u003Cspan style=\"font-weight: bold;\"\u003Ecustom QDialog\u003C\/span\u003E instance and shows it.\u003Cbr \/\u003E\u003Cpre class=\"brush:cpp\" name=\"code\"\u003E#include \u0026lt;QApplication\u0026gt;\u003Cbr \/\u003E#include \"ShowQImageDialog.h\"\u003Cbr \/\u003Eint main(int argc, char *argv[]) {\u003Cbr \/\u003E    QApplication a(argc, argv);\u003Cbr \/\u003E    ShowQImageDialog w;\u003Cbr \/\u003E    w.show();\u003Cbr \/\u003E    return a.exec();\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EShowQImageDialog.h file is the extended QDialog class header file.\u003Cbr \/\u003E\u003Cpre class=\"brush:cpp\" name=\"code\"\u003E#ifndef SHOWQIMAGEDIALOG_H\u003Cbr \/\u003E#define SHOWQIMAGEDIALOG_H\u003Cbr \/\u003E#include \u0026lt;QDialog\u0026gt;\u003Cbr \/\u003E#include \u0026lt;QGridLayout\u0026gt;\u003Cbr \/\u003E#include \u0026lt;QScrollArea\u0026gt;\u003Cbr \/\u003E#include \u0026lt;QLabel\u0026gt;\u003Cbr \/\u003E#include \u0026lt;QImage\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003Eclass ShowQImageDialog : public QDialog\u003Cbr \/\u003E{\u003Cbr \/\u003E    Q_OBJECT\u003Cbr \/\u003E\u003Cbr \/\u003Epublic:\u003Cbr \/\u003E    ShowQImageDialog(QWidget *parent = 0);\u003Cbr \/\u003E    ~ShowQImageDialog();\u003Cbr \/\u003Eprivate:\u003Cbr \/\u003E    QGridLayout* gridLayout;\u003Cbr \/\u003E    QImage* inputImg;\u003Cbr \/\u003E    QLabel* imgDisplayLabel;\u003Cbr \/\u003E    QScrollArea* scrollArea;\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E#endif \/\/ SHOWQIMAGEDIALOG_H\u003C\/pre\u003E\u003Cbr \/\u003EShowQImageDialog.cpp file contains implementation details for extended QDialog class.\u003Cbr \/\u003E\u003Cpre class=\"brush:cpp\" name=\"code\"\u003E#include \"ShowQImageDialog.h\"\u003Cbr \/\u003EShowQImageDialog::ShowQImageDialog(QWidget *parent) : QDialog(parent)\u003Cbr \/\u003E{\u003Cbr \/\u003E    gridLayout = new QGridLayout();\u003Cbr \/\u003E    inputImg = new QImage(\"\/home\/tufan\/wallpaper.png\");\u003Cbr \/\u003E    imgDisplayLabel = new QLabel(\"\");\u003Cbr \/\u003E    imgDisplayLabel-\u0026gt;setPixmap(QPixmap::fromImage(*inputImg));\u003Cbr \/\u003E    imgDisplayLabel-\u0026gt;adjustSize();\u003Cbr \/\u003E    scrollArea = new QScrollArea();\u003Cbr \/\u003E    scrollArea-\u0026gt;setWidget(imgDisplayLabel);\u003Cbr \/\u003E    scrollArea-\u0026gt;setMinimumSize(256,256);\u003Cbr \/\u003E    scrollArea-\u0026gt;setMaximumSize(512,512);\u003Cbr \/\u003E    gridLayout-\u0026gt;addWidget(scrollArea,0,0);\u003Cbr \/\u003E    setLayout(gridLayout);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003EShowQImageDialog::~ShowQImageDialog()\u003Cbr \/\u003E{\u003Cbr \/\u003E    delete inputImg;\u003Cbr \/\u003E    delete imgDisplayLabel;\u003Cbr \/\u003E    delete scrollArea;\u003Cbr \/\u003E    delete gridLayout;\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EShowQImageDialog:\u003Cbr \/\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-dQGPVg3IVzA\/Te5zYFz_CkI\/AAAAAAAAADk\/zoWeIayvZG4\/s1600\/showQImageDialog.png\" onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\"\u003E\u003Cimg alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5615552643091860034\" src=\"http:\/\/4.bp.blogspot.com\/-dQGPVg3IVzA\/Te5zYFz_CkI\/AAAAAAAAADk\/zoWeIayvZG4\/s320\/showQImageDialog.png\" style=\"cursor: hand; cursor: pointer; display: block; height: 268px; margin: 0px auto 10px; text-align: center; width: 320px;\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003EApplication created by QT Creator and uses Qt4.7 ."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/tufangorel.blogspot.com\/feeds\/2344070852462766886\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/tufangorel.blogspot.com\/2011\/06\/show-qimage-in-a-qlabel.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/1629739459234463496\/posts\/default\/2344070852462766886"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/1629739459234463496\/posts\/default\/2344070852462766886"},{"rel":"alternate","type":"text/html","href":"http:\/\/tufangorel.blogspot.com\/2011\/06\/show-qimage-in-a-qlabel.html","title":"Show QImage in a QLabel"}],"author":[{"name":{"$t":"Tufan Görel"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/02308107478813024690"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"31","src":"http:\/\/1.bp.blogspot.com\/-8C4zN2V2Zoc\/VhgpZJnyTzI\/AAAAAAAAAdA\/dmkwYsYWV00\/s220\/profile_photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-nW049dMWehc\/Te5xB4TL-5I\/AAAAAAAAADc\/hcjETadMtjI\/s72-c\/project_structure.png","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});